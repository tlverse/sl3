on:
  push:
    branches:
      - master
      - devel
  pull_request:
    branches:
      - master
      - devel

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-latest, r: 'release'}
          - {os: macOS-latest, r: 'release'}
          - {os: windows-latest, r: 'release'}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}

      - name: Install pandoc
        uses: r-lib/actions/setup-pandoc@v2

      - name: Install tinyTeX
        uses: r-lib/actions/setup-tinytex@v2

      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt install -y curl libcurl4-doc libcurl4-openssl-dev
          sudo $(which R) CMD javareconf

      - name: Install package dependencies
        run: |
          install.packages(c("remotes", "rcmdcheck", "covr", "sessioninfo", "devtools"))
          if(Sys.info()["sysname"] == "Windows") install.packages("igraph", type = "binary")
          remotes::install_deps(dependencies = TRUE)
        shell: Rscript {0}

      - name: Check package
        run: |
          options(crayon.enabled = TRUE)
          rcmdcheck::rcmdcheck(args = "--no-manual", error_on = "error")
        shell: Rscript {0}

      - name: Upload code coverage
        if: runner.os == 'Linux'
        run: |
          covr::codecov()
        shell: Rscript {0}
