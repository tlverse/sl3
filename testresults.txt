ℹ Testing sl3
✔ | F W  S  OK | Context

⠏ |          0 | add_many_columns                                               
⠏ |          0 | test-add-many-columns.R -- Verify fix for data.table set issue 
⠋ |          1 | test-add-many-columns.R -- Verify fix for data.table set issue 
✔ |          1 | test-add-many-columns.R -- Verify fix for data.table set issue [2.2s]

⠏ |          0 | args_to_list                                                   
⠏ |          0 | test-args_to_list.R -- args_to_list                            
✔ |          5 | test-args_to_list.R -- args_to_list

⠏ |          0 | arima-tsDyn                                                    
⠏ |          0 | test-arima-tsDyn.R -- ARIMA and tsDyn                          
⠋ |          1 | test-arima-tsDyn.R -- ARIMA and tsDyn                          
⠹ |          3 | test-arima-tsDyn.R -- ARIMA and tsDyn                          Using maximum autoregressive order for low regime: mL = 1 
Using maximum autoregressive order for high regime: mH = 1 
Using default threshold variable: thDelay=0
Performing grid search for starting values...
Starting values fixed: gamma =  21.30769 , th =  1160.291 ; SSE =  576834.1 
Optimization algorithm converged
Problem: singular hessian
Optimized values fixed for regime 2  : gamma =  21.30769 , th =  1160.291 ; SSE =  576834.1 
Using maximum autoregressive order for low regime: mL = 1 
Using maximum autoregressive order for high regime: mH = 1 
Using default threshold variable: thDelay=0
Performing grid search for starting values...
Starting values fixed: gamma =  21.30769 , th =  1160.291 ; SSE =  576834.1 
Optimization algorithm converged
Problem: singular hessian
Optimized values fixed for regime 2  : gamma =  21.30769 , th =  1160.291 ; SSE =  576834.1 

⠸ |          4 | test-arima-tsDyn.R -- ARIMA and tsDyn                          [1] "ARIMA requires matrix of external regressors to not be rank  deficient. The following covariates were removed to counter the  linear combinations: cnt"
[1] "ARIMA requires matrix of external regressors to not be rank  deficient. The following covariates were removed to counter the  linear combinations: cnt"
[1] "ARIMA requires matrix of external regressors to not be rank  deficient. The following covariates were removed to counter the  linear combinations: cnt"

⠦ |          7 | test-arima-tsDyn.R -- ARIMA and tsDyn                          
✔ |          7 | test-arima-tsDyn.R -- ARIMA and tsDyn [1.2s]

⠏ |          0 | bartMachine                                                    
⠏ |          0 | test-bartMachine.R -- Lrnr_bartMachine                         
⠋ |          1 | test-bartMachine.R -- Lrnr_bartMachine                         bartMachine now using 1 cores.

⠙ |          2 | test-bartMachine.R -- Lrnr_bartMachine                         
✔ |          2 | test-bartMachine.R -- Lrnr_bartMachine [29.6s]

⠏ |          0 | bayesglm                                                       
⠏ |          0 | test-bayesglm -- Lrnr_bayesglm                                 
⠋ |          1 | test-bayesglm -- Lrnr_bayesglm                                 
⠦ |          7 | test-bayesglm -- Lrnr_bayesglm                                 
✔ |          7 | test-bayesglm -- Lrnr_bayesglm

⠏ |          0 | binomial_learners                                              
⠏ |          0 | test-binomial_learners.R -- binomial learners in a Super Learner
⠋ |      1   0 | test-binomial_learners.R -- binomial learners in a Super Learner
✔ |      1   0 | test-binomial_learners.R -- binomial learners in a Super Learner [7.1s]

⠏ |          0 | bound                                                          
⠏ |          0 | test-Lrnr_bound.R -- bound predictions                         
⠋ |          1 | test-Lrnr_bound.R -- bound predictions                         
✔ |          2 | test-Lrnr_bound.R -- bound predictions [1.1s]

⠏ |          0 | caret                                                          
⠏ |          0 | test-caret.R -- General testing for Caret package support      [1] "Testing Learner: Lrnr_caret_rf_NULL"

⠋ |          1 | test-caret.R -- General testing for Caret package support      
⠴ |          6 | test-caret.R -- General testing for Caret package support      
✔ |          6 | test-caret.R -- General testing for Caret package support [1.2s]

⠏ |          0 | character_covariates                                           
⠏ |          0 | test-character_covariates.R -- Automatically cast character covariates to factors
✔ |          2 | test-character_covariates.R -- Automatically cast character covariates to factors

⠏ |          0 | cpp_data                                                       
⠏ |          0 | test-cpp_data.R -- cpp data and subsets                        
⠏ |          0 | custom_chain                                                   
⠏ |          0 | test_pipeline.R -- Basic pipeline functionality                
✔ |          1 | test_pipeline.R -- Basic pipeline functionality

⠏ |          0 | cv_selector                                                    
⠏ |          0 | test-cv-selector.R -- Lrnr_cv_selector for CV-selector metalearner
⠋ |          1 | test-cv-selector.R -- Lrnr_cv_selector for CV-selector metalearner
✔ |          1 | test-cv-selector.R -- Lrnr_cv_selector for CV-selector metalearner

⠏ |          0 | cv-update                                                      
⠋ |          1 | cv-update                                                      
✔ |          2 | cv-update

⠏ |          0 | cv                                                             
⠏ |          0 | test-cv.R -- Cross-validation fold handling                    
⠙ |          2 | test-cv.R -- Cross-validation fold handling                    
⠼ |          5 | test-cv.R -- Cross-validation fold handling                    
⠏ |         10 | test-cv.R -- Cross-validation fold handling                    [1] "Testing LOOCV with Learner: Lrnr_bartMachine"
[1] "Testing training"

⠹ |         13 | test-cv.R -- Cross-validation fold handling                    [1] "Testing predict"

⠸ |         14 | test-cv.R -- Cross-validation fold handling                    
⠼ |         15 | test-cv.R -- Cross-validation fold handling                    
⠦ |         17 | test-cv.R -- Cross-validation fold handling                    [1] "Testing LOOCV with Learner: Lrnr_bayesglm_TRUE"
[1] "Testing training"

⠋ |         21 | test-cv.R -- Cross-validation fold handling                    [1] "Testing predict"

⠹ |         23 | test-cv.R -- Cross-validation fold handling                    
⠼ |         25 | test-cv.R -- Cross-validation fold handling                    [1] "Testing LOOCV with Learner: Lrnr_dbarts_500_100_200_FALSE_TRUE_FALSE"
[1] "Testing training"

⠇ |         29 | test-cv.R -- Cross-validation fold handling                    [1] "Testing predict"

⠏ |         30 | test-cv.R -- Cross-validation fold handling                    
⠋ |         31 | test-cv.R -- Cross-validation fold handling                    
⠹ |         33 | test-cv.R -- Cross-validation fold handling                    [1] "Testing LOOCV with Learner: Lrnr_earth_2_3_backward_0_1_0_0"
[1] "Testing training"

⠦ |         37 | test-cv.R -- Cross-validation fold handling                    [1] "Testing predict"

⠧ |         38 | test-cv.R -- Cross-validation fold handling                    
⠇ |         39 | test-cv.R -- Cross-validation fold handling                    
⠋ |         41 | test-cv.R -- Cross-validation fold handling                    [1] "Testing LOOCV with Learner: Lrnr_ga_TRUE_TRUE_100_10_TRUE"
[1] "Testing training"

⠼ |         45 | test-cv.R -- Cross-validation fold handling                    [1] "Testing predict"

⠦ |         47 | test-cv.R -- Cross-validation fold handling                    
⠋ |         51 | test-cv.R -- Cross-validation fold handling                    [1] "Testing LOOCV with Learner: Lrnr_gam_NULL_NULL_GCV.Cp"
[1] "Testing training"

⠹ |         53 | test-cv.R -- Cross-validation fold handling                    [1] "Testing predict"

⠸ |         54 | test-cv.R -- Cross-validation fold handling                    
⠼ |         55 | test-cv.R -- Cross-validation fold handling                    
⠦ |         57 | test-cv.R -- Cross-validation fold handling                    [1] "Testing LOOCV with Learner: Lrnr_gbm_10000_2_0.001"
[1] "Testing training"

⠋ |         61 | test-cv.R -- Cross-validation fold handling                    [1] "Testing predict"

⠙ |         62 | test-cv.R -- Cross-validation fold handling                    
⠹ |         63 | test-cv.R -- Cross-validation fold handling                    
⠼ |         65 | test-cv.R -- Cross-validation fold handling                    [1] "Testing LOOCV with Learner: Lrnr_glm_TRUE"
[1] "Testing training"

⠇ |         69 | test-cv.R -- Cross-validation fold handling                    [1] "Testing predict"

⠋ |         71 | test-cv.R -- Cross-validation fold handling                    
⠹ |         73 | test-cv.R -- Cross-validation fold handling                    [1] "Testing LOOCV with Learner: Lrnr_glm_fast_TRUE_Cholesky"
[1] "Testing training"

⠦ |         77 | test-cv.R -- Cross-validation fold handling                    [1] "Testing predict"

⠧ |         78 | test-cv.R -- Cross-validation fold handling                    
⠇ |         79 | test-cv.R -- Cross-validation fold handling                    
⠋ |         81 | test-cv.R -- Cross-validation fold handling                    [1] "Testing LOOCV with Learner: Lrnr_glmnet_NULL_deviance_10_1_100_TRUE_FALSE"
[1] "Testing training"

⠼ |         85 | test-cv.R -- Cross-validation fold handling                    [1] "Testing predict"

⠴ |         86 | test-cv.R -- Cross-validation fold handling                    
⠦ |         87 | test-cv.R -- Cross-validation fold handling                    
⠇ |         89 | test-cv.R -- Cross-validation fold handling                    [1] "Testing LOOCV with Learner: Lrnr_grf_2000_c(0.1, 0.5, 0.9)_FALSE_NULL_FALSE_0.5_NULL_5_TRUE_0.05_0_1_0.5"
[1] "Testing training"

⠹ |         93 | test-cv.R -- Cross-validation fold handling                    [1] "Testing predict"

⠸ |         94 | test-cv.R -- Cross-validation fold handling                    
⠼ |         95 | test-cv.R -- Cross-validation fold handling                    
⠦ |         97 | test-cv.R -- Cross-validation fold handling                    [1] "Testing LOOCV with Learner: Lrnr_hal9001"
[1] "Testing training"

⠋ |   1    100 | test-cv.R -- Cross-validation fold handling                    
⠙ |   1    101 | test-cv.R -- Cross-validation fold handling                    [1] "Testing predict"

⠹ |   1    102 | test-cv.R -- Cross-validation fold handling                    
⠸ |   1    103 | test-cv.R -- Cross-validation fold handling                    
⠴ |   1    105 | test-cv.R -- Cross-validation fold handling                    [1] "Testing LOOCV with Learner: Lrnr_lightgbm_1"
[1] "Testing training"
Error in (function (params = list(), data, nrounds = 100L, valids = list(),  : 
  unused argument (num_threads = 1)

✖ | 1 1    108 | test-cv.R -- Cross-validation fold handling [64.4s]
────────────────────────────────────────────────────────────────────────────────
Warning ('test-cv.R:93:3'): (code run outside of `test_that()`)
Option grouped=FALSE enforced in cv.glmnet, since < 3 observations per fold
Backtrace:
     ▆
  1. ├─base::lapply(learners, test_loocv_learner, loocv_task) at test-cv.R:152:1
  2. │ └─sl3 (local) FUN(X[[i]], ...)
  3. │   └─cv_learner$train(loocv_task) at test-cv.R:93:3
  4. │     └─delayed_fit$compute(job_type = sl3_delayed_job_type(), progress = verbose) at sl3/R/Lrnr_base.R:226:7
  5. │       └─scheduler$compute()
  6. │         └─self$compute_step()
  7. │           └─SequentialJob$new(current_task)
  8. │             └─delayed (local) initialize(...)
  9. │               ├─base::try(...)
 10. │               │ └─base::tryCatch(...)
 11. │               │   └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 12. │               │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 13. │               │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 14. │               └─delayed::eval_delayed(to_eval, delayed_object$timeout)
 15. │                 ├─R.utils::withTimeout(...)
 16. │                 │ ├─base::tryCatch(...)
 17. │                 │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 18. │                 │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 19. │                 │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 20. │                 │ └─base::eval(expr, envir = envir, enclos = baseenv())
 21. │                 │   └─base::eval(expr, envir = envir, enclos = baseenv())
 22. │                 └─rlang::eval_bare(expr = to_eval$expr, env = to_eval$env)
 23. └─sl3::learner_train(...)
 24.   └─learner$base_train(task, trained_sublearners) at sl3/R/learner_helpers.R:34:3
 25.     └─private$.train(processed_task) at sl3/R/Lrnr_base.R:150:9
 26.       └─sl3:::call_with_args(hal9001::fit_hal, args, other_valid = other_valid) at sl3/R/Lrnr_hal9001.R:95:7
 27.         ├─base::do.call(fun, args) at sl3/R/utils.R:116:3
 28.         └─hal9001 (local) `<fn>`(X = `<dbl[,7]>`, Y = `<dbl>`, family = "gaussian", fit_control = `<named list>`)
 29.           ├─base::do.call(glmnet::cv.glmnet, fit_control)
 30.           └─glmnet (local) `<fn>`(...)
 31.             └─glmnet:::cv.glmnet.raw(...)

Error ('test-cv.R:93:3'): (code run outside of `test_that()`)
Error in `self$compute_step()`: Error in (function (params = list(), data, nrounds = 100L, valids = list(),  : 
  unused argument (num_threads = 1)

Backtrace:
    ▆
 1. └─base::lapply(learners, test_loocv_learner, loocv_task) at test-cv.R:152:1
 2.   └─sl3 (local) FUN(X[[i]], ...)
 3.     └─cv_learner$train(loocv_task) at test-cv.R:93:3
 4.       └─delayed_fit$compute(job_type = sl3_delayed_job_type(), progress = verbose) at sl3/R/Lrnr_base.R:226:7
 5.         └─scheduler$compute()
 6.           └─self$compute_step()
────────────────────────────────────────────────────────────────────────────────

⠏ |          0 | CVsl                                                           
⠏ |          0 | test_CV_sl.R -- cross-validated SL functionality               
⠏ |          0 | dbarts                                                         
⠏ |          0 | test-dbarts.R -- Lrnr_dbarts                                   
Running BART with numeric y

number of trees: 200
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	k prior fixed to 2.000000
	degrees of freedom in sigma prior: 3.000000
	quantile in sigma prior: 0.900000
	scale in sigma prior: 0.002109
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 100
	number of test observations: 0
	number of explanatory variables: 10
	init sigma: 2.165793, curr sigma: 2.165793

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 

Running mcmc loop:
iteration: 100 (of 500)
iteration: 200 (of 500)
iteration: 300 (of 500)
iteration: 400 (of 500)
iteration: 500 (of 500)
total seconds in loop: 0.153327

Tree sizes, last iteration:
[1] 2 5 3 2 3 5 2 3 3 2 2 2 2 2 3 2 3 2 
2 1 3 6 2 2 3 3 2 2 3 4 2 1 2 3 3 4 2 4 
3 3 2 3 2 3 2 2 3 2 2 2 2 2 2 2 4 2 2 2 
3 1 2 1 2 4 2 2 3 3 2 6 3 2 3 2 3 2 1 2 
2 3 2 2 2 3 2 4 3 2 2 2 3 2 2 2 3 2 4 3 
3 2 2 4 3 4 2 3 3 2 2 2 2 5 3 2 4 2 2 2 
2 2 2 2 2 2 2 2 4 3 2 2 2 5 1 2 3 3 3 2 
2 3 5 2 2 2 2 2 3 2 2 2 2 3 2 2 4 2 4 2 
2 2 1 3 3 3 3 2 1 4 3 2 3 1 3 3 3 2 3 3 
4 2 3 2 2 3 3 2 2 2 3 2 2 2 2 3 3 2 3 3 
3 2 

Variable Usage, last iteration (var:count):
(1: 39) (2: 34) (3: 30) (4: 39) (5: 38) 
(6: 29) (7: 24) (8: 29) (9: 22) (10: 21) 

DONE BART


⠋ |          1 | test-dbarts.R -- Lrnr_dbarts                                   
⠙ |          2 | test-dbarts.R -- Lrnr_dbarts                                   
⠹ |          3 | test-dbarts.R -- Lrnr_dbarts                                   
✔ |          3 | test-dbarts.R -- Lrnr_dbarts [1.3s]

⠏ |          0 | define_interactions                                            
⠏ |          0 | test-define_interactions.R -- Lrnr_define_interactions         
⠸ |          4 | test-define_interactions.R -- Lrnr_define_interactions         
✔ |          5 | test-define_interactions.R -- Lrnr_define_interactions

⠏ |          0 | delayed_sl3                                                    
⠏ |          0 | test-delayed_sl3.R -- manually delay learner fit               
⠏ |          0 | density-pooled_hazards                                         
⠏ |          0 | test-density-pooled_hazards: Lrnr_pooled_hazards + Lrnr_density_discretize
⠋ |   1      0 | test-density-pooled_hazards: Lrnr_pooled_hazards + Lrnr_density_discretize
⠙ |   1      1 | test-density-pooled_hazards: Lrnr_pooled_hazards + Lrnr_density_discretize
✔ |   1      1 | test-density-pooled_hazards: Lrnr_pooled_hazards + Lrnr_density_discretize [4.6s]
────────────────────────────────────────────────────────────────────────────────
Warning ('test-density-pooled_hazards.R:40:1'): (code run outside of `test_that()`)
Some fit_control arguments are neither default nor glmnet/cv.glmnet arguments: n_folds; 
They will be removed from fit_control
Backtrace:
     ▆
  1. ├─haldensify$train(task) at test-density-pooled_hazards.R:40:1
  2. │ └─delayed_fit$compute(job_type = sl3_delayed_job_type(), progress = verbose) at sl3/R/Lrnr_base.R:226:7
  3. │   └─scheduler$compute()
  4. │     └─self$compute_step()
  5. │       └─SequentialJob$new(current_task)
  6. │         └─delayed (local) initialize(...)
  7. │           ├─base::try(...)
  8. │           │ └─base::tryCatch(...)
  9. │           │   └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 10. │           │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 11. │           │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 12. │           └─delayed::eval_delayed(to_eval, delayed_object$timeout)
 13. │             ├─R.utils::withTimeout(...)
 14. │             │ ├─base::tryCatch(...)
 15. │             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. │             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 17. │             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. │             │ └─base::eval(expr, envir = envir, enclos = baseenv())
 19. │             │   └─base::eval(expr, envir = envir, enclos = baseenv())
 20. │             └─rlang::eval_bare(expr = to_eval$expr, env = to_eval$env)
 21. └─sl3::learner_train(...)
 22.   └─learner$base_train(task, trained_sublearners) at sl3/R/learner_helpers.R:34:3
 23.     └─private$.train(processed_task) at sl3/R/Lrnr_base.R:150:9
 24.       └─sl3:::call_with_args(...) at sl3/R/Lrnr_haldensify.R:133:7
 25.         ├─base::do.call(fun, args) at sl3/R/utils.R:116:3
 26.         └─haldensify (local) `<fn>`(...)
 27.           ├─base::do.call(hal9001::fit_hal, fit_hal_args)
 28.           └─hal9001 (local) `<fn>`(...)
────────────────────────────────────────────────────────────────────────────────

⠏ |          0 | density-semiparametric                                         
⠏ |          0 | test-density-semiparametric.R -- Lrnr_density_semiparametric   [1] 631.4315
[1] 583.5107

⠋ |          1 | test-density-semiparametric.R -- Lrnr_density_semiparametric   
✔ |          2 | test-density-semiparametric.R -- Lrnr_density_semiparametric [2.1s]

⠏ |          0 | earth                                                          
⠏ |          0 | test-earth.R -- Lrnr_earth                                     
✔ |          1 | test-earth.R -- Lrnr_earth

⠏ |          0 | expSmooth                                                      
⠏ |          0 | test-expSmooth.R -- Lrnr_expSmooth                             
✔ |          1 | test-expSmooth.R -- Lrnr_expSmooth

⠏ |          0 | FrequencyTSAlgs                                                
⠏ |          0 | test-FrequencyTSAlgs.R -- Lrnr_HarmonicReg                     
✔ |          1 | test-FrequencyTSAlgs.R -- Lrnr_HarmonicReg

⠏ |          0 | gam                                                            
⠏ |          0 | test-gam.R -- Lrnr_gam                                         
⠋ |          1 | test-gam.R -- Lrnr_gam                                         Gu & Wahba 4 term additive model

⠹ |          3 | test-gam.R -- Lrnr_gam                                         
✔ |          3 | test-gam.R -- Lrnr_gam

⠏ |          0 | garch                                                          
⠏ |          0 | test-garch.R -- Lrnr_rugarch                                   
⠋ |          1 | test-garch.R -- Lrnr_rugarch                                   
⠙ |          2 | test-garch.R -- Lrnr_rugarch                                   
✔ |          2 | test-garch.R -- Lrnr_rugarch [1.0s]

⠏ |          0 | gbm                                                            
⠏ |          0 | test-gbm.R -- Lrnr_gbm                                         Iter   TrainDeviance   ValidDeviance   StepSize   Improve
     1        1.6325            -nan     0.0010    0.0001
     2        1.6325            -nan     0.0010    0.0000
     3        1.6324            -nan     0.0010    0.0001
     4        1.6323            -nan     0.0010    0.0001
     5        1.6322            -nan     0.0010    0.0001
     6        1.6321            -nan     0.0010    0.0000
     7        1.6320            -nan     0.0010    0.0000
     8        1.6319            -nan     0.0010    0.0001
     9        1.6318            -nan     0.0010    0.0001
    10        1.6317            -nan     0.0010    0.0001
    20        1.6307            -nan     0.0010    0.0001
    40        1.6291            -nan     0.0010    0.0001
    60        1.6273            -nan     0.0010   -0.0000
    80        1.6257            -nan     0.0010    0.0001
   100        1.6241            -nan     0.0010    0.0001
   120        1.6226            -nan     0.0010    0.0001
   140        1.6212            -nan     0.0010   -0.0000
   160        1.6197            -nan     0.0010    0.0000
   180        1.6183            -nan     0.0010    0.0001
   200        1.6169            -nan     0.0010    0.0001
   220        1.6156            -nan     0.0010    0.0001
   240        1.6143            -nan     0.0010    0.0000
   260        1.6131            -nan     0.0010   -0.0000
   280        1.6118            -nan     0.0010    0.0000
   300        1.6105            -nan     0.0010    0.0001
   320        1.6093            -nan     0.0010    0.0000
   340        1.6080            -nan     0.0010    0.0000
   360        1.6069            -nan     0.0010   -0.0000
   380        1.6057            -nan     0.0010    0.0000
   400        1.6046            -nan     0.0010    0.0000
   420        1.6034            -nan     0.0010    0.0000
   440        1.6023            -nan     0.0010    0.0000
   460        1.6012            -nan     0.0010    0.0000
   480        1.6003            -nan     0.0010    0.0000
   500        1.5993            -nan     0.0010    0.0000
   520        1.5984            -nan     0.0010    0.0000
   540        1.5974            -nan     0.0010    0.0000
   560        1.5964            -nan     0.0010    0.0000
   580        1.5955            -nan     0.0010    0.0000
   600        1.5946            -nan     0.0010    0.0000
   620        1.5937            -nan     0.0010    0.0000
   640        1.5929            -nan     0.0010    0.0000
   660        1.5920            -nan     0.0010   -0.0000
   680        1.5911            -nan     0.0010    0.0000
   700        1.5904            -nan     0.0010    0.0000
   720        1.5895            -nan     0.0010   -0.0000
   740        1.5887            -nan     0.0010    0.0000
   760        1.5878            -nan     0.0010    0.0000
   780        1.5871            -nan     0.0010   -0.0000
   800        1.5864            -nan     0.0010   -0.0000
   820        1.5857            -nan     0.0010    0.0000
   840        1.5850            -nan     0.0010    0.0000
   860        1.5844            -nan     0.0010   -0.0000
   880        1.5837            -nan     0.0010    0.0000
   900        1.5830            -nan     0.0010    0.0000
   920        1.5823            -nan     0.0010   -0.0000
   940        1.5816            -nan     0.0010   -0.0000
   960        1.5810            -nan     0.0010    0.0000
   980        1.5803            -nan     0.0010   -0.0000
  1000        1.5797            -nan     0.0010   -0.0000
  1020        1.5790            -nan     0.0010    0.0000
  1040        1.5784            -nan     0.0010    0.0000
  1060        1.5778            -nan     0.0010    0.0000
  1080        1.5771            -nan     0.0010    0.0000
  1100        1.5765            -nan     0.0010    0.0000
  1120        1.5759            -nan     0.0010    0.0000
  1140        1.5752            -nan     0.0010   -0.0000
  1160        1.5746            -nan     0.0010   -0.0000
  1180        1.5740            -nan     0.0010    0.0000
  1200        1.5735            -nan     0.0010    0.0000
  1220        1.5728            -nan     0.0010   -0.0000
  1240        1.5722            -nan     0.0010    0.0000
  1260        1.5717            -nan     0.0010   -0.0000
  1280        1.5711            -nan     0.0010   -0.0000
  1300        1.5706            -nan     0.0010   -0.0000
  1320        1.5700            -nan     0.0010    0.0000
  1340        1.5694            -nan     0.0010   -0.0000
  1360        1.5689            -nan     0.0010    0.0000
  1380        1.5684            -nan     0.0010   -0.0000
  1400        1.5679            -nan     0.0010   -0.0000
  1420        1.5673            -nan     0.0010    0.0000
  1440        1.5668            -nan     0.0010   -0.0000
  1460        1.5662            -nan     0.0010   -0.0000
  1480        1.5658            -nan     0.0010   -0.0000
  1500        1.5652            -nan     0.0010   -0.0000
  1520        1.5647            -nan     0.0010    0.0000
  1540        1.5642            -nan     0.0010   -0.0000
  1560        1.5637            -nan     0.0010    0.0000
  1580        1.5632            -nan     0.0010    0.0000
  1600        1.5627            -nan     0.0010    0.0000
  1620        1.5623            -nan     0.0010    0.0000
  1640        1.5618            -nan     0.0010   -0.0000
  1660        1.5614            -nan     0.0010    0.0000
  1680        1.5610            -nan     0.0010   -0.0000
  1700        1.5605            -nan     0.0010   -0.0000
  1720        1.5601            -nan     0.0010   -0.0000
  1740        1.5596            -nan     0.0010   -0.0000
  1760        1.5591            -nan     0.0010   -0.0000
  1780        1.5586            -nan     0.0010   -0.0000
  1800        1.5582            -nan     0.0010   -0.0000
  1820        1.5578            -nan     0.0010   -0.0000
  1840        1.5573            -nan     0.0010    0.0000
  1860        1.5569            -nan     0.0010    0.0000
  1880        1.5565            -nan     0.0010   -0.0000
  1900        1.5560            -nan     0.0010   -0.0000
  1920        1.5556            -nan     0.0010   -0.0000
  1940        1.5551            -nan     0.0010   -0.0000
  1960        1.5546            -nan     0.0010    0.0000
  1980        1.5542            -nan     0.0010    0.0000
  2000        1.5537            -nan     0.0010   -0.0000
  2020        1.5533            -nan     0.0010   -0.0000
  2040        1.5529            -nan     0.0010   -0.0000
  2060        1.5524            -nan     0.0010   -0.0000
  2080        1.5520            -nan     0.0010   -0.0000
  2100        1.5516            -nan     0.0010   -0.0000
  2120        1.5512            -nan     0.0010    0.0000
  2140        1.5508            -nan     0.0010   -0.0000
  2160        1.5503            -nan     0.0010   -0.0000
  2180        1.5500            -nan     0.0010    0.0000
  2200        1.5496            -nan     0.0010   -0.0000
  2220        1.5492            -nan     0.0010   -0.0000
  2240        1.5488            -nan     0.0010   -0.0000
  2260        1.5484            -nan     0.0010   -0.0000
  2280        1.5480            -nan     0.0010   -0.0000
  2300        1.5476            -nan     0.0010   -0.0000
  2320        1.5473            -nan     0.0010   -0.0000
  2340        1.5469            -nan     0.0010    0.0000
  2360        1.5465            -nan     0.0010   -0.0001
  2380        1.5462            -nan     0.0010   -0.0000
  2400        1.5458            -nan     0.0010   -0.0000
  2420        1.5454            -nan     0.0010    0.0000
  2440        1.5449            -nan     0.0010    0.0000
  2460        1.5445            -nan     0.0010   -0.0000
  2480        1.5441            -nan     0.0010    0.0000
  2500        1.5437            -nan     0.0010   -0.0000
  2520        1.5434            -nan     0.0010   -0.0000
  2540        1.5429            -nan     0.0010   -0.0000
  2560        1.5426            -nan     0.0010    0.0000
  2580        1.5422            -nan     0.0010   -0.0000
  2600        1.5418            -nan     0.0010    0.0000
  2620        1.5415            -nan     0.0010   -0.0000
  2640        1.5411            -nan     0.0010   -0.0000
  2660        1.5407            -nan     0.0010   -0.0000
  2680        1.5403            -nan     0.0010   -0.0000
  2700        1.5400            -nan     0.0010   -0.0000
  2720        1.5397            -nan     0.0010   -0.0000
  2740        1.5394            -nan     0.0010   -0.0000
  2760        1.5390            -nan     0.0010   -0.0000
  2780        1.5386            -nan     0.0010   -0.0000
  2800        1.5383            -nan     0.0010   -0.0000
  2820        1.5380            -nan     0.0010   -0.0000
  2840        1.5377            -nan     0.0010   -0.0000
  2860        1.5374            -nan     0.0010   -0.0000
  2880        1.5371            -nan     0.0010   -0.0000
  2900        1.5368            -nan     0.0010   -0.0000
  2920        1.5365            -nan     0.0010   -0.0000
  2940        1.5361            -nan     0.0010   -0.0000
  2960        1.5357            -nan     0.0010   -0.0000
  2980        1.5354            -nan     0.0010   -0.0000
  3000        1.5351            -nan     0.0010   -0.0000
  3020        1.5348            -nan     0.0010   -0.0000
  3040        1.5345            -nan     0.0010   -0.0000
  3060        1.5342            -nan     0.0010   -0.0000
  3080        1.5339            -nan     0.0010    0.0000
  3100        1.5336            -nan     0.0010   -0.0000
  3120        1.5332            -nan     0.0010   -0.0000
  3140        1.5329            -nan     0.0010   -0.0000
  3160        1.5326            -nan     0.0010   -0.0000
  3180        1.5323            -nan     0.0010    0.0000
  3200        1.5320            -nan     0.0010   -0.0000
  3220        1.5316            -nan     0.0010   -0.0000
  3240        1.5313            -nan     0.0010    0.0000
  3260        1.5310            -nan     0.0010   -0.0000
  3280        1.5307            -nan     0.0010    0.0000
  3300        1.5304            -nan     0.0010    0.0000
  3320        1.5301            -nan     0.0010   -0.0000
  3340        1.5299            -nan     0.0010   -0.0000
  3360        1.5296            -nan     0.0010   -0.0000
  3380        1.5293            -nan     0.0010   -0.0000
  3400        1.5291            -nan     0.0010   -0.0000
  3420        1.5288            -nan     0.0010   -0.0000
  3440        1.5286            -nan     0.0010   -0.0001
  3460        1.5283            -nan     0.0010   -0.0000
  3480        1.5280            -nan     0.0010   -0.0001
  3500        1.5276            -nan     0.0010    0.0000
  3520        1.5273            -nan     0.0010   -0.0001
  3540        1.5270            -nan     0.0010   -0.0000
  3560        1.5267            -nan     0.0010   -0.0000
  3580        1.5264            -nan     0.0010   -0.0000
  3600        1.5261            -nan     0.0010   -0.0000
  3620        1.5259            -nan     0.0010   -0.0000
  3640        1.5255            -nan     0.0010   -0.0000
  3660        1.5252            -nan     0.0010   -0.0000
  3680        1.5250            -nan     0.0010   -0.0000
  3700        1.5247            -nan     0.0010   -0.0000
  3720        1.5244            -nan     0.0010   -0.0000
  3740        1.5241            -nan     0.0010   -0.0000
  3760        1.5238            -nan     0.0010   -0.0000
  3780        1.5235            -nan     0.0010   -0.0000
  3800        1.5233            -nan     0.0010   -0.0000
  3820        1.5230            -nan     0.0010   -0.0000
  3840        1.5226            -nan     0.0010   -0.0000
  3860        1.5223            -nan     0.0010   -0.0000
  3880        1.5220            -nan     0.0010   -0.0000
  3900        1.5218            -nan     0.0010   -0.0000
  3920        1.5215            -nan     0.0010   -0.0000
  3940        1.5212            -nan     0.0010   -0.0000
  3960        1.5209            -nan     0.0010   -0.0000
  3980        1.5207            -nan     0.0010   -0.0000
  4000        1.5204            -nan     0.0010   -0.0000
  4020        1.5201            -nan     0.0010   -0.0000
  4040        1.5198            -nan     0.0010   -0.0000
  4060        1.5196            -nan     0.0010   -0.0000
  4080        1.5193            -nan     0.0010   -0.0000
  4100        1.5190            -nan     0.0010   -0.0000
  4120        1.5187            -nan     0.0010   -0.0000
  4140        1.5185            -nan     0.0010   -0.0000
  4160        1.5182            -nan     0.0010   -0.0000
  4180        1.5179            -nan     0.0010   -0.0000
  4200        1.5177            -nan     0.0010   -0.0000
  4220        1.5174            -nan     0.0010   -0.0000
  4240        1.5172            -nan     0.0010   -0.0000
  4260        1.5169            -nan     0.0010   -0.0000
  4280        1.5167            -nan     0.0010   -0.0000
  4300        1.5164            -nan     0.0010   -0.0000
  4320        1.5161            -nan     0.0010   -0.0000
  4340        1.5159            -nan     0.0010   -0.0000
  4360        1.5156            -nan     0.0010   -0.0000
  4380        1.5153            -nan     0.0010   -0.0000
  4400        1.5151            -nan     0.0010   -0.0000
  4420        1.5148            -nan     0.0010   -0.0000
  4440        1.5145            -nan     0.0010   -0.0000
  4460        1.5143            -nan     0.0010   -0.0000
  4480        1.5140            -nan     0.0010   -0.0000
  4500        1.5138            -nan     0.0010   -0.0000
  4520        1.5136            -nan     0.0010   -0.0000
  4540        1.5133            -nan     0.0010   -0.0000
  4560        1.5130            -nan     0.0010   -0.0000
  4580        1.5128            -nan     0.0010   -0.0000
  4600        1.5126            -nan     0.0010   -0.0000
  4620        1.5123            -nan     0.0010   -0.0000
  4640        1.5120            -nan     0.0010   -0.0000
  4660        1.5118            -nan     0.0010   -0.0000
  4680        1.5116            -nan     0.0010   -0.0000
  4700        1.5113            -nan     0.0010   -0.0000
  4720        1.5111            -nan     0.0010   -0.0000
  4740        1.5108            -nan     0.0010    0.0000
  4760        1.5106            -nan     0.0010   -0.0000
  4780        1.5103            -nan     0.0010   -0.0000
  4800        1.5101            -nan     0.0010   -0.0000
  4820        1.5097            -nan     0.0010   -0.0000
  4840        1.5095            -nan     0.0010   -0.0000
  4860        1.5092            -nan     0.0010   -0.0000
  4880        1.5090            -nan     0.0010   -0.0000
  4900        1.5088            -nan     0.0010   -0.0000
  4920        1.5086            -nan     0.0010   -0.0000
  4940        1.5083            -nan     0.0010   -0.0000
  4960        1.5080            -nan     0.0010   -0.0000
  4980        1.5078            -nan     0.0010   -0.0000
  5000        1.5075            -nan     0.0010   -0.0000
  5020        1.5073            -nan     0.0010   -0.0000
  5040        1.5071            -nan     0.0010   -0.0000
  5060        1.5068            -nan     0.0010   -0.0000
  5080        1.5066            -nan     0.0010   -0.0000
  5100        1.5064            -nan     0.0010   -0.0000
  5120        1.5061            -nan     0.0010   -0.0000
  5140        1.5059            -nan     0.0010   -0.0000
  5160        1.5057            -nan     0.0010   -0.0000
  5180        1.5055            -nan     0.0010   -0.0000
  5200        1.5053            -nan     0.0010   -0.0000
  5220        1.5050            -nan     0.0010   -0.0000
  5240        1.5047            -nan     0.0010   -0.0000
  5260        1.5045            -nan     0.0010   -0.0000
  5280        1.5043            -nan     0.0010   -0.0000
  5300        1.5040            -nan     0.0010   -0.0000
  5320        1.5038            -nan     0.0010   -0.0000
  5340        1.5036            -nan     0.0010   -0.0000
  5360        1.5033            -nan     0.0010   -0.0000
  5380        1.5031            -nan     0.0010   -0.0001
  5400        1.5029            -nan     0.0010   -0.0000
  5420        1.5026            -nan     0.0010   -0.0000
  5440        1.5024            -nan     0.0010   -0.0000
  5460        1.5022            -nan     0.0010   -0.0000
  5480        1.5019            -nan     0.0010   -0.0001
  5500        1.5017            -nan     0.0010   -0.0000
  5520        1.5015            -nan     0.0010   -0.0000
  5540        1.5013            -nan     0.0010   -0.0000
  5560        1.5011            -nan     0.0010    0.0000
  5580        1.5009            -nan     0.0010   -0.0000
  5600        1.5007            -nan     0.0010   -0.0000
  5620        1.5004            -nan     0.0010   -0.0000
  5640        1.5003            -nan     0.0010   -0.0000
  5660        1.5001            -nan     0.0010    0.0000
  5680        1.4999            -nan     0.0010   -0.0000
  5700        1.4997            -nan     0.0010   -0.0000
  5720        1.4994            -nan     0.0010   -0.0000
  5740        1.4992            -nan     0.0010   -0.0000
  5760        1.4990            -nan     0.0010   -0.0000
  5780        1.4988            -nan     0.0010   -0.0000
  5800        1.4986            -nan     0.0010    0.0000
  5820        1.4984            -nan     0.0010   -0.0000
  5840        1.4981            -nan     0.0010   -0.0000
  5860        1.4979            -nan     0.0010    0.0000
  5880        1.4977            -nan     0.0010   -0.0000
  5900        1.4975            -nan     0.0010   -0.0000
  5920        1.4972            -nan     0.0010   -0.0000
  5940        1.4971            -nan     0.0010   -0.0001
  5960        1.4969            -nan     0.0010   -0.0000
  5980        1.4967            -nan     0.0010   -0.0000
  6000        1.4965            -nan     0.0010   -0.0000
  6020        1.4963            -nan     0.0010   -0.0000
  6040        1.4961            -nan     0.0010   -0.0000
  6060        1.4959            -nan     0.0010   -0.0000
  6080        1.4957            -nan     0.0010   -0.0000
  6100        1.4955            -nan     0.0010   -0.0000
  6120        1.4953            -nan     0.0010   -0.0000
  6140        1.4951            -nan     0.0010   -0.0000
  6160        1.4948            -nan     0.0010   -0.0000
  6180        1.4945            -nan     0.0010    0.0000
  6200        1.4943            -nan     0.0010   -0.0000
  6220        1.4941            -nan     0.0010   -0.0000
  6240        1.4939            -nan     0.0010   -0.0000
  6260        1.4936            -nan     0.0010   -0.0000
  6280        1.4935            -nan     0.0010   -0.0000
  6300        1.4933            -nan     0.0010   -0.0000
  6320        1.4930            -nan     0.0010   -0.0000
  6340        1.4928            -nan     0.0010   -0.0000
  6360        1.4926            -nan     0.0010   -0.0000
  6380        1.4924            -nan     0.0010   -0.0000
  6400        1.4923            -nan     0.0010   -0.0000
  6420        1.4921            -nan     0.0010   -0.0000
  6440        1.4920            -nan     0.0010   -0.0000
  6460        1.4918            -nan     0.0010   -0.0000
  6480        1.4916            -nan     0.0010   -0.0000
  6500        1.4914            -nan     0.0010   -0.0000
  6520        1.4912            -nan     0.0010   -0.0000
  6540        1.4911            -nan     0.0010   -0.0000
  6560        1.4908            -nan     0.0010    0.0000
  6580        1.4906            -nan     0.0010   -0.0000
  6600        1.4905            -nan     0.0010   -0.0000
  6620        1.4903            -nan     0.0010   -0.0000
  6640        1.4901            -nan     0.0010   -0.0000
  6660        1.4898            -nan     0.0010   -0.0000
  6680        1.4896            -nan     0.0010   -0.0000
  6700        1.4894            -nan     0.0010   -0.0000
  6720        1.4892            -nan     0.0010   -0.0001
  6740        1.4889            -nan     0.0010   -0.0000
  6760        1.4888            -nan     0.0010   -0.0000
  6780        1.4887            -nan     0.0010   -0.0000
  6800        1.4885            -nan     0.0010   -0.0000
  6820        1.4882            -nan     0.0010   -0.0000
  6840        1.4881            -nan     0.0010   -0.0000
  6860        1.4879            -nan     0.0010   -0.0000
  6880        1.4877            -nan     0.0010   -0.0000
  6900        1.4875            -nan     0.0010   -0.0000
  6920        1.4873            -nan     0.0010   -0.0000
  6940        1.4871            -nan     0.0010   -0.0000
  6960        1.4870            -nan     0.0010   -0.0000
  6980        1.4868            -nan     0.0010   -0.0000
  7000        1.4866            -nan     0.0010   -0.0001
  7020        1.4864            -nan     0.0010   -0.0000
  7040        1.4863            -nan     0.0010   -0.0000
  7060        1.4861            -nan     0.0010   -0.0000
  7080        1.4859            -nan     0.0010    0.0000
  7100        1.4857            -nan     0.0010   -0.0000
  7120        1.4855            -nan     0.0010   -0.0001
  7140        1.4853            -nan     0.0010   -0.0000
  7160        1.4851            -nan     0.0010   -0.0000
  7180        1.4849            -nan     0.0010    0.0000
  7200        1.4847            -nan     0.0010   -0.0000
  7220        1.4846            -nan     0.0010   -0.0000
  7240        1.4844            -nan     0.0010   -0.0000
  7260        1.4843            -nan     0.0010   -0.0000
  7280        1.4841            -nan     0.0010   -0.0000
  7300        1.4838            -nan     0.0010   -0.0000
  7320        1.4836            -nan     0.0010   -0.0000
  7340        1.4834            -nan     0.0010   -0.0000
  7360        1.4832            -nan     0.0010   -0.0000
  7380        1.4830            -nan     0.0010    0.0000
  7400        1.4828            -nan     0.0010   -0.0000
  7420        1.4827            -nan     0.0010   -0.0000
  7440        1.4825            -nan     0.0010   -0.0000
  7460        1.4824            -nan     0.0010   -0.0000
  7480        1.4822            -nan     0.0010   -0.0000
  7500        1.4819            -nan     0.0010   -0.0000
  7520        1.4818            -nan     0.0010   -0.0000
  7540        1.4816            -nan     0.0010   -0.0000
  7560        1.4815            -nan     0.0010   -0.0000
  7580        1.4813            -nan     0.0010   -0.0000
  7600        1.4811            -nan     0.0010   -0.0000
  7620        1.4810            -nan     0.0010   -0.0000
  7640        1.4808            -nan     0.0010   -0.0000
  7660        1.4806            -nan     0.0010   -0.0001
  7680        1.4804            -nan     0.0010   -0.0000
  7700        1.4802            -nan     0.0010   -0.0000
  7720        1.4800            -nan     0.0010   -0.0000
  7740        1.4798            -nan     0.0010   -0.0000
  7760        1.4796            -nan     0.0010   -0.0000
  7780        1.4795            -nan     0.0010   -0.0000
  7800        1.4793            -nan     0.0010   -0.0000
  7820        1.4791            -nan     0.0010   -0.0000
  7840        1.4789            -nan     0.0010   -0.0000
  7860        1.4787            -nan     0.0010   -0.0000
  7880        1.4785            -nan     0.0010   -0.0000
  7900        1.4784            -nan     0.0010   -0.0000
  7920        1.4782            -nan     0.0010   -0.0000
  7940        1.4781            -nan     0.0010   -0.0000
  7960        1.4779            -nan     0.0010   -0.0000
  7980        1.4777            -nan     0.0010   -0.0000
  8000        1.4775            -nan     0.0010   -0.0000
  8020        1.4773            -nan     0.0010   -0.0000
  8040        1.4771            -nan     0.0010   -0.0000
  8060        1.4770            -nan     0.0010   -0.0000
  8080        1.4768            -nan     0.0010   -0.0000
  8100        1.4766            -nan     0.0010   -0.0000
  8120        1.4765            -nan     0.0010   -0.0000
  8140        1.4763            -nan     0.0010   -0.0000
  8160        1.4761            -nan     0.0010   -0.0000
  8180        1.4759            -nan     0.0010   -0.0000
  8200        1.4757            -nan     0.0010   -0.0000
  8220        1.4755            -nan     0.0010   -0.0000
  8240        1.4754            -nan     0.0010   -0.0000
  8260        1.4752            -nan     0.0010   -0.0000
  8280        1.4750            -nan     0.0010   -0.0000
  8300        1.4749            -nan     0.0010   -0.0000
  8320        1.4747            -nan     0.0010   -0.0000
  8340        1.4745            -nan     0.0010   -0.0000
  8360        1.4743            -nan     0.0010   -0.0000
  8380        1.4742            -nan     0.0010   -0.0000
  8400        1.4740            -nan     0.0010   -0.0000
  8420        1.4739            -nan     0.0010   -0.0000
  8440        1.4737            -nan     0.0010   -0.0000
  8460        1.4736            -nan     0.0010   -0.0000
  8480        1.4735            -nan     0.0010   -0.0000
  8500        1.4733            -nan     0.0010   -0.0000
  8520        1.4732            -nan     0.0010   -0.0000
  8540        1.4730            -nan     0.0010   -0.0000
  8560        1.4729            -nan     0.0010   -0.0000
  8580        1.4727            -nan     0.0010   -0.0000
  8600        1.4726            -nan     0.0010   -0.0000
  8620        1.4725            -nan     0.0010   -0.0000
  8640        1.4723            -nan     0.0010   -0.0000
  8660        1.4721            -nan     0.0010   -0.0000
  8680        1.4719            -nan     0.0010   -0.0000
  8700        1.4718            -nan     0.0010   -0.0000
  8720        1.4716            -nan     0.0010   -0.0000
  8740        1.4714            -nan     0.0010   -0.0000
  8760        1.4712            -nan     0.0010   -0.0000
  8780        1.4710            -nan     0.0010   -0.0000
  8800        1.4709            -nan     0.0010   -0.0000
  8820        1.4707            -nan     0.0010   -0.0000
  8840        1.4705            -nan     0.0010   -0.0000
  8860        1.4704            -nan     0.0010   -0.0000
  8880        1.4702            -nan     0.0010   -0.0000
  8900        1.4700            -nan     0.0010   -0.0000
  8920        1.4699            -nan     0.0010   -0.0000
  8940        1.4697            -nan     0.0010   -0.0000
  8960        1.4696            -nan     0.0010    0.0000
  8980        1.4694            -nan     0.0010   -0.0000
  9000        1.4693            -nan     0.0010   -0.0000
  9020        1.4691            -nan     0.0010   -0.0000
  9040        1.4689            -nan     0.0010   -0.0000
  9060        1.4688            -nan     0.0010   -0.0000
  9080        1.4686            -nan     0.0010   -0.0000
  9100        1.4684            -nan     0.0010   -0.0000
  9120        1.4683            -nan     0.0010   -0.0000
  9140        1.4681            -nan     0.0010   -0.0000
  9160        1.4680            -nan     0.0010   -0.0000
  9180        1.4679            -nan     0.0010   -0.0000
  9200        1.4677            -nan     0.0010   -0.0000
  9220        1.4675            -nan     0.0010   -0.0000
  9240        1.4674            -nan     0.0010   -0.0000
  9260        1.4672            -nan     0.0010   -0.0000
  9280        1.4670            -nan     0.0010   -0.0000
  9300        1.4669            -nan     0.0010   -0.0000
  9320        1.4668            -nan     0.0010   -0.0000
  9340        1.4667            -nan     0.0010   -0.0000
  9360        1.4666            -nan     0.0010   -0.0000
  9380        1.4664            -nan     0.0010   -0.0000
  9400        1.4663            -nan     0.0010   -0.0000
  9420        1.4662            -nan     0.0010   -0.0000
  9440        1.4660            -nan     0.0010   -0.0000
  9460        1.4659            -nan     0.0010   -0.0000
  9480        1.4657            -nan     0.0010    0.0000
  9500        1.4656            -nan     0.0010   -0.0000
  9520        1.4654            -nan     0.0010   -0.0000
  9540        1.4653            -nan     0.0010   -0.0000
  9560        1.4651            -nan     0.0010   -0.0000
  9580        1.4649            -nan     0.0010   -0.0000
  9600        1.4648            -nan     0.0010   -0.0000
  9620        1.4647            -nan     0.0010   -0.0000
  9640        1.4645            -nan     0.0010   -0.0000
  9660        1.4644            -nan     0.0010   -0.0000
  9680        1.4642            -nan     0.0010   -0.0000
  9700        1.4641            -nan     0.0010   -0.0000
  9720        1.4639            -nan     0.0010   -0.0000
  9740        1.4638            -nan     0.0010   -0.0000
  9760        1.4636            -nan     0.0010   -0.0000
  9780        1.4634            -nan     0.0010   -0.0000
  9800        1.4632            -nan     0.0010   -0.0000
  9820        1.4631            -nan     0.0010   -0.0000
  9840        1.4630            -nan     0.0010   -0.0000
  9860        1.4628            -nan     0.0010   -0.0000
  9880        1.4627            -nan     0.0010   -0.0000
  9900        1.4626            -nan     0.0010   -0.0000
  9920        1.4624            -nan     0.0010   -0.0000
  9940        1.4623            -nan     0.0010   -0.0000
  9960        1.4622            -nan     0.0010   -0.0000
  9980        1.4620            -nan     0.0010   -0.0000
 10000        1.4619            -nan     0.0010    0.0000


⠋ |          1 | test-gbm.R -- Lrnr_gbm                                         
✔ |          1 | test-gbm.R -- Lrnr_gbm [3.7s]

⠏ |          0 | glm_fast                                                       
⠏ |          0 | test-glm_fast.R -- Lrnr_glm_fast                               
⠼ |      2   3 | test-glm_fast.R -- Lrnr_glm_fast                               
⠴ |      3   3 | test-glm_fast.R -- Lrnr_glm_fast                               
✔ |   1  5   4 | test-glm_fast.R -- Lrnr_glm_fast
────────────────────────────────────────────────────────────────────────────────
Warning ('test-glm_fast.R:139:3'): When speedglm fails (singlular X) the fallback glm works
the matrix is either rank-deficient or not positive definite
Backtrace:
     ▆
  1. ├─Lrnr_glm_fast$new(method = "Cholesky")$train(task_all) at test-glm_fast.R:139:3
  2. │ └─delayed_fit$compute(job_type = sl3_delayed_job_type(), progress = verbose) at sl3/R/Lrnr_base.R:226:7
  3. │   └─scheduler$compute()
  4. │     └─self$compute_step()
  5. │       └─SequentialJob$new(current_task)
  6. │         └─delayed (local) initialize(...)
  7. │           ├─base::try(...)
  8. │           │ └─base::tryCatch(...)
  9. │           │   └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 10. │           │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 11. │           │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 12. │           └─delayed::eval_delayed(to_eval, delayed_object$timeout)
 13. │             ├─R.utils::withTimeout(...)
 14. │             │ ├─base::tryCatch(...)
 15. │             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. │             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 17. │             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. │             │ └─base::eval(expr, envir = envir, enclos = baseenv())
 19. │             │   └─base::eval(expr, envir = envir, enclos = baseenv())
 20. │             └─rlang::eval_bare(expr = to_eval$expr, env = to_eval$env)
 21. └─sl3::learner_train(...)
 22.   └─learner$base_train(task, trained_sublearners) at sl3/R/learner_helpers.R:34:3
 23.     └─private$.train(processed_task) at sl3/R/Lrnr_base.R:150:9
 24.       ├─sl3:::SuppressGivenWarnings(...) at sl3/R/Lrnr_glm_fast.R:88:7
 25.       │ └─base::withCallingHandlers(expr, warning = h) at sl3/R/utils.R:29:3
 26.       ├─base::try(call_with_args(speedglm::speedglm.wfit, args), silent = TRUE) at sl3/R/Lrnr_glm_fast.R:90:11
 27.       │ └─base::tryCatch(...)
 28.       │   └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 29.       │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 30.       │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 31.       └─sl3:::call_with_args(speedglm::speedglm.wfit, args)
 32.         ├─base::do.call(fun, args) at sl3/R/utils.R:116:3
 33.         └─speedglm (local) `<fn>`(...)
 34.           └─speedglm::control(XTX, , tol.values, tol.vectors, , method)
 35.             ├─base::chol(B, pivot = TRUE)
 36.             ├─base::chol(B, pivot = TRUE)
 37.             └─base::chol.default(B, pivot = TRUE)
────────────────────────────────────────────────────────────────────────────────

⠏ |          0 | glm                                                            
⠏ |          0 | test-glm.R -- Lrnr_glm                                         
✔ |          4 | test-glm.R -- Lrnr_glm

⠏ |          0 | glmnet                                                         
⠏ |          0 | test-glmnet.R -- Lrnr_glmnet                                   
⠋ |          1 | test-glmnet.R -- Lrnr_glmnet                                   
✔ |          2 | test-glmnet.R -- Lrnr_glmnet

⠏ |          0 | grf                                                            
⠏ |          0 | test grf: Generalized Random Forests                           
✔ |          1 | test grf: Generalized Random Forests

⠏ |          0 | gts                                                            
⠏ |          0 | test-gts.R -- Lrnr_gts for grouped time series forecasts       
⠋ |   1      0 | test-gts.R -- Lrnr_gts for grouped time series forecasts       Error in utmat %*% fcasts : non-conformable arguments

✖ | 1 1      0 | test-gts.R -- Lrnr_gts for grouped time series forecasts
────────────────────────────────────────────────────────────────────────────────
Warning ('test-gts.R:40:3'): Lrnr_gts produces expected forecasts as gts implementation
number of rows of result is not a multiple of vector length
Backtrace:
     ▆
  1. ├─gts_learner_fit$predict(test_task) at test-gts.R:40:3
  2. │ └─delayed_preds$compute(job_type = sl3_delayed_job_type()) at sl3/R/Lrnr_base.R:233:7
  3. │   └─scheduler$compute()
  4. │     └─self$compute_step()
  5. │       └─SequentialJob$new(current_task)
  6. │         └─delayed (local) initialize(...)
  7. │           ├─base::try(...)
  8. │           │ └─base::tryCatch(...)
  9. │           │   └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 10. │           │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 11. │           │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 12. │           └─delayed::eval_delayed(to_eval, delayed_object$timeout)
 13. │             ├─R.utils::withTimeout(...)
 14. │             │ ├─base::tryCatch(...)
 15. │             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. │             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 17. │             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. │             │ └─base::eval(expr, envir = envir, enclos = baseenv())
 19. │             │   └─base::eval(expr, envir = envir, enclos = baseenv())
 20. │             └─rlang::eval_bare(expr = to_eval$expr, env = to_eval$env)
 21. └─sl3::learner_fit_predict(learner_fit = `<Lrnr_gts>`, task = `<sl3_Task>`)
 22.   └─learner_fit$base_predict(task) at sl3/R/learner_helpers.R:70:3
 23.     └─private$.predict(task) at sl3/R/Lrnr_base.R:190:7
 24.       └─sl3:::call_with_args(forecast.gts, args, silent = TRUE) at sl3/R/Lrnr_gts.R:103:7
 25.         ├─base::do.call(fun, args) at sl3/R/utils.R:116:3
 26.         └─hts (local) `<fn>`(...)
 27.           └─hts (local) Comb(...)
 28.             └─hts::combinef(x, groups = object$groups, ...)
 29.               └─hts:::LU(fcasts = fcasts, S = smat, weights = weights, allow.changes = FALSE)
 30.                 ├─methods::cbind2(...)
 31.                 └─Matrix::cbind2(...)
 32.                   └─Matrix:::cbind.Matrix(x, y, deparse.level = 0L)

Error ('test-gts.R:40:3'): Lrnr_gts produces expected forecasts as gts implementation
Error in `self$compute_step()`: Error in utmat %*% fcasts : non-conformable arguments

Backtrace:
    ▆
 1. └─gts_learner_fit$predict(test_task) at test-gts.R:40:3
 2.   └─delayed_preds$compute(job_type = sl3_delayed_job_type()) at sl3/R/Lrnr_base.R:233:7
 3.     └─scheduler$compute()
 4.       └─self$compute_step()
────────────────────────────────────────────────────────────────────────────────

⠏ |          0 | hal9001                                                        
⠏ |          0 | test_hal9001.R -- Lrnr_hal9001                                 
⠋ |          1 | test_hal9001.R -- Lrnr_hal9001                                 
⠙ |          2 | test_hal9001.R -- Lrnr_hal9001                                 
✔ |          2 | test_hal9001.R -- Lrnr_hal9001 [94.7s]

⠏ |          0 | haldensify                                                     
⠏ |          0 | test_haldensify.R -- Lrnr_haldensify                           
⠋ |   1      0 | test_haldensify.R -- Lrnr_haldensify                           
⠙ |   2      0 | test_haldensify.R -- Lrnr_haldensify                           
⠹ |   2      1 | test_haldensify.R -- Lrnr_haldensify                           
✔ |   2      1 | test_haldensify.R -- Lrnr_haldensify [2.6s]
────────────────────────────────────────────────────────────────────────────────
Warning ('test-haldensify.R:46:3'): Lrnr_haldensify produces predictions identical to haldensify
Some fit_control arguments are neither default nor glmnet/cv.glmnet arguments: n_folds; 
They will be removed from fit_control
Backtrace:
     ▆
  1. ├─hal_dens$train(task) at test-haldensify.R:46:3
  2. │ └─delayed_fit$compute(job_type = sl3_delayed_job_type(), progress = verbose) at sl3/R/Lrnr_base.R:226:7
  3. │   └─scheduler$compute()
  4. │     └─self$compute_step()
  5. │       └─SequentialJob$new(current_task)
  6. │         └─delayed (local) initialize(...)
  7. │           ├─base::try(...)
  8. │           │ └─base::tryCatch(...)
  9. │           │   └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 10. │           │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 11. │           │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 12. │           └─delayed::eval_delayed(to_eval, delayed_object$timeout)
 13. │             ├─R.utils::withTimeout(...)
 14. │             │ ├─base::tryCatch(...)
 15. │             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. │             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 17. │             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. │             │ └─base::eval(expr, envir = envir, enclos = baseenv())
 19. │             │   └─base::eval(expr, envir = envir, enclos = baseenv())
 20. │             └─rlang::eval_bare(expr = to_eval$expr, env = to_eval$env)
 21. └─sl3::learner_train(...)
 22.   └─learner$base_train(task, trained_sublearners) at sl3/R/learner_helpers.R:34:3
 23.     └─private$.train(processed_task) at sl3/R/Lrnr_base.R:150:9
 24.       └─sl3:::call_with_args(...) at sl3/R/Lrnr_haldensify.R:133:7
 25.         ├─base::do.call(fun, args) at sl3/R/utils.R:116:3
 26.         └─haldensify (local) `<fn>`(...)
 27.           ├─base::do.call(hal9001::fit_hal, fit_hal_args)
 28.           └─hal9001 (local) `<fn>`(...)

Warning ('test-haldensify.R:50:3'): Lrnr_haldensify produces predictions identical to haldensify
Some fit_control arguments are neither default nor glmnet/cv.glmnet arguments: n_folds; 
They will be removed from fit_control
Backtrace:
    ▆
 1. └─haldensify::haldensify(...) at test-haldensify.R:50:3
 2.   ├─base::do.call(hal9001::fit_hal, fit_hal_args)
 3.   └─hal9001 (local) `<fn>`(...)
────────────────────────────────────────────────────────────────────────────────

⠏ |          0 | hts                                                            
⠏ |          0 | test-hts.R -- Lrnr_hts for hierarchical time series forecasts  Error in utmat %*% fcasts : non-conformable arguments

✖ | 1 1      0 | test-hts.R -- Lrnr_hts for hierarchical time series forecasts
────────────────────────────────────────────────────────────────────────────────
Warning ('test-hts.R:40:3'): Lrnr_hts produces expected forecasts as hts implementation
number of rows of result is not a multiple of vector length
Backtrace:
     ▆
  1. ├─hts_learner_fit$predict(test_task) at test-hts.R:40:3
  2. │ └─delayed_preds$compute(job_type = sl3_delayed_job_type()) at sl3/R/Lrnr_base.R:233:7
  3. │   └─scheduler$compute()
  4. │     └─self$compute_step()
  5. │       └─SequentialJob$new(current_task)
  6. │         └─delayed (local) initialize(...)
  7. │           ├─base::try(...)
  8. │           │ └─base::tryCatch(...)
  9. │           │   └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 10. │           │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 11. │           │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 12. │           └─delayed::eval_delayed(to_eval, delayed_object$timeout)
 13. │             ├─R.utils::withTimeout(...)
 14. │             │ ├─base::tryCatch(...)
 15. │             │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. │             │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 17. │             │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. │             │ └─base::eval(expr, envir = envir, enclos = baseenv())
 19. │             │   └─base::eval(expr, envir = envir, enclos = baseenv())
 20. │             └─rlang::eval_bare(expr = to_eval$expr, env = to_eval$env)
 21. └─sl3::learner_fit_predict(learner_fit = `<Lrnr_hts>`, task = `<sl3_Task>`)
 22.   └─learner_fit$base_predict(task) at sl3/R/learner_helpers.R:70:3
 23.     └─private$.predict(task) at sl3/R/Lrnr_base.R:190:7
 24.       └─sl3:::call_with_args(forecast.gts, args, silent = TRUE) at sl3/R/Lrnr_hts.R:104:7
 25.         ├─base::do.call(fun, args) at sl3/R/utils.R:116:3
 26.         └─hts (local) `<fn>`(...)
 27.           └─hts (local) Comb(...)
 28.             └─hts::combinef(x, nodes = object$nodes, ...)
 29.               └─hts:::LU(fcasts = fcasts, S = smat, weights = weights, allow.changes = FALSE)
 30.                 ├─methods::cbind2(...)
 31.                 └─Matrix::cbind2(...)
 32.                   └─Matrix:::cbind.Matrix(x, y, deparse.level = 0L)

Error ('test-hts.R:40:3'): Lrnr_hts produces expected forecasts as hts implementation
Error in `self$compute_step()`: Error in utmat %*% fcasts : non-conformable arguments

Backtrace:
    ▆
 1. └─hts_learner_fit$predict(test_task) at test-hts.R:40:3
 2.   └─delayed_preds$compute(job_type = sl3_delayed_job_type()) at sl3/R/Lrnr_base.R:233:7
 3.     └─scheduler$compute()
 4.       └─self$compute_step()
────────────────────────────────────────────────────────────────────────────────

⠏ |          0 | importance                                                     
⠏ |          0 | test_importance.R -- Variable Importance                       
⠙ |          2 | test_importance.R -- Variable Importance                       
✔ |          3 | test_importance.R -- Variable Importance [5.9s]

⠏ |          0 | independent_binomial                                           
⠏ |          0 | test-independent_binomial.R -- Lrnr_independent_binomial       
✔ |          1 | test-independent_binomial.R -- Lrnr_independent_binomial

⠏ |          0 | kerasR                                                         
⠏ |          0 | learners_reg                                                   
⠏ |          0 | lightgbm                                                       
⠏ |          0 | test-lightgbm.R -- General testing for LightGBM                [1] "Testing Learner: Lrnr_lightgbm_1"
Error in (function (params = list(), data, nrounds = 100L, valids = list(),  : 
  unused argument (num_threads = 1)
Error in (function (params = list(), data, nrounds = 100L, valids = list(),  : 
  unused argument (num_threads = 1)
Error in (function (params = list(), data, nrounds = 100L, valids = list(),  : 
  unused argument (num_threads = 1)
Error in (function (params = list(), data, nrounds = 100L, valids = list(),  : 
  unused argument (num_threads = 1)
Error in (function (params = list(), data, nrounds = 100L, valids = list(),  : 
  unused argument (num_threads = 1)
Error in (function (params = list(), data, nrounds = 100L, valids = list(),  : 
  unused arguments (num_threads = 1, num_leaves = 30)
Error in (function (params = list(), data, nrounds = 100L, valids = list(),  : 
  unused arguments (num_threads = 1, num_leaves = 40, num_class = 11)
Error in (function (params = list(), data, nrounds = 100L, valids = list(),  : 
  unused argument (num_threads = 1)

✖ | 8        0 | test-lightgbm.R -- General testing for LightGBM
────────────────────────────────────────────────────────────────────────────────
Error ('test-lightgbm.R:20:5'): Learner can be trained on data
Error in `self$compute_step()`: Error in (function (params = list(), data, nrounds = 100L, valids = list(),  : 
  unused argument (num_threads = 1)

Backtrace:
    ▆
 1. └─learner_obj$train(task) at test-lightgbm.R:20:5
 2.   └─delayed_fit$compute(job_type = sl3_delayed_job_type(), progress = verbose) at sl3/R/Lrnr_base.R:226:7
 3.     └─scheduler$compute()
 4.       └─self$compute_step()

Error ('test-lightgbm.R:27:5'): Learner can generate training set predictions
Error in `self$compute_step()`: Error in (function (params = list(), data, nrounds = 100L, valids = list(),  : 
  unused argument (num_threads = 1)

Backtrace:
    ▆
 1. └─learner_obj$train(task) at test-lightgbm.R:27:5
 2.   └─delayed_fit$compute(job_type = sl3_delayed_job_type(), progress = verbose) at sl3/R/Lrnr_base.R:226:7
 3.     └─scheduler$compute()
 4.       └─self$compute_step()

Error ('test-lightgbm.R:37:5'): Chaining returns a task
Error in `self$compute_step()`: Error in (function (params = list(), data, nrounds = 100L, valids = list(),  : 
  unused argument (num_threads = 1)

Backtrace:
    ▆
 1. └─learner_obj$train(task) at test-lightgbm.R:37:5
 2.   └─delayed_fit$compute(job_type = sl3_delayed_job_type(), progress = verbose) at sl3/R/Lrnr_base.R:226:7
 3.     └─scheduler$compute()
 4.       └─self$compute_step()

Error ('test-lightgbm.R:44:5'): Chaining returns the correct number of rows
Error in `self$compute_step()`: Error in (function (params = list(), data, nrounds = 100L, valids = list(),  : 
  unused argument (num_threads = 1)

Backtrace:
    ▆
 1. └─learner_obj$train(task) at test-lightgbm.R:44:5
 2.   └─delayed_fit$compute(job_type = sl3_delayed_job_type(), progress = verbose) at sl3/R/Lrnr_base.R:226:7
 3.     └─scheduler$compute()
 4.       └─self$compute_step()

Error ('test-lightgbm.R:59:3'): Lrnr_lightgbm predictions match lightgbm's: continuous outcome
Error in `self$compute_step()`: Error in (function (params = list(), data, nrounds = 100L, valids = list(),  : 
  unused argument (num_threads = 1)

Backtrace:
    ▆
 1. └─lrnr_lightgbm$train(task) at test-lightgbm.R:59:3
 2.   └─delayed_fit$compute(job_type = sl3_delayed_job_type(), progress = verbose) at sl3/R/Lrnr_base.R:226:7
 3.     └─scheduler$compute()
 4.       └─self$compute_step()

Error ('test-lightgbm.R:89:3'): Lrnr_lightgbm predictions match lightgbm's: binary outcome
Error in `self$compute_step()`: Error in (function (params = list(), data, nrounds = 100L, valids = list(),  : 
  unused arguments (num_threads = 1, num_leaves = 30)

Backtrace:
    ▆
 1. └─lrnr_lightgbm$train(task) at test-lightgbm.R:89:3
 2.   └─delayed_fit$compute(job_type = sl3_delayed_job_type(), progress = verbose) at sl3/R/Lrnr_base.R:226:7
 3.     └─scheduler$compute()
 4.       └─self$compute_step()

Error ('test-lightgbm.R:121:3'): Lrnr_lightgbm predictions match lightgbm's: categorical outcome
Error in `self$compute_step()`: Error in (function (params = list(), data, nrounds = 100L, valids = list(),  : 
  unused arguments (num_threads = 1, num_leaves = 40, num_class = 11)

Backtrace:
    ▆
 1. └─lrnr_lightgbm$train(task) at test-lightgbm.R:121:3
 2.   └─delayed_fit$compute(job_type = sl3_delayed_job_type(), progress = verbose) at sl3/R/Lrnr_base.R:226:7
 3.     └─scheduler$compute()
 4.       └─self$compute_step()

Error ('test-lightgbm.R:157:3'): Cursory test of Lrnr_lightgbm with weights
Error in `self$compute_step()`: Error in (function (params = list(), data, nrounds = 100L, valids = list(),  : 
  unused argument (num_threads = 1)

Backtrace:
    ▆
 1. └─lrnr_lightgbm$train(task) at test-lightgbm.R:157:3
 2.   └─delayed_fit$compute(job_type = sl3_delayed_job_type(), progress = verbose) at sl3/R/Lrnr_base.R:226:7
 3.     └─scheduler$compute()
 4.       └─self$compute_step()
────────────────────────────────────────────────────────────────────────────────
Maximum number of failures exceeded; quitting at end of file.
ℹ Increase this number with (e.g.) `testthat::set_max_fails(Inf)` 

══ Results ═════════════════════════════════════════════════════════════════════
Duration: 248.0 s

── Skipped tests (6) ───────────────────────────────────────────────────────────
• empty test (6): 'test-binomial_learners.R:65:1', 'test-glm_fast.R:28:1',
  'test-glm_fast.R:60:1', 'test-glm_fast.R:74:1', 'test-glm_fast.R:91:1',
  'test-glm_fast.R:105:1'

── Failed tests ────────────────────────────────────────────────────────────────
Error ('test-cv.R:93:3'): (code run outside of `test_that()`)
Error in `self$compute_step()`: Error in (function (params = list(), data, nrounds = 100L, valids = list(),  : 
  unused argument (num_threads = 1)

Backtrace:
    ▆
 1. └─base::lapply(learners, test_loocv_learner, loocv_task) at test-cv.R:152:1
 2.   └─sl3 (local) FUN(X[[i]], ...)
 3.     └─cv_learner$train(loocv_task) at test-cv.R:93:3
 4.       └─delayed_fit$compute(job_type = sl3_delayed_job_type(), progress = verbose) at sl3/R/Lrnr_base.R:226:7
 5.         └─scheduler$compute()
 6.           └─self$compute_step()

Error ('test-gts.R:40:3'): Lrnr_gts produces expected forecasts as gts implementation
Error in `self$compute_step()`: Error in utmat %*% fcasts : non-conformable arguments

Backtrace:
    ▆
 1. └─gts_learner_fit$predict(test_task) at test-gts.R:40:3
 2.   └─delayed_preds$compute(job_type = sl3_delayed_job_type()) at sl3/R/Lrnr_base.R:233:7
 3.     └─scheduler$compute()
 4.       └─self$compute_step()

Error ('test-hts.R:40:3'): Lrnr_hts produces expected forecasts as hts implementation
Error in `self$compute_step()`: Error in utmat %*% fcasts : non-conformable arguments

Backtrace:
    ▆
 1. └─hts_learner_fit$predict(test_task) at test-hts.R:40:3
 2.   └─delayed_preds$compute(job_type = sl3_delayed_job_type()) at sl3/R/Lrnr_base.R:233:7
 3.     └─scheduler$compute()
 4.       └─self$compute_step()

Error ('test-lightgbm.R:20:5'): Learner can be trained on data
Error in `self$compute_step()`: Error in (function (params = list(), data, nrounds = 100L, valids = list(),  : 
  unused argument (num_threads = 1)

Backtrace:
    ▆
 1. └─learner_obj$train(task) at test-lightgbm.R:20:5
 2.   └─delayed_fit$compute(job_type = sl3_delayed_job_type(), progress = verbose) at sl3/R/Lrnr_base.R:226:7
 3.     └─scheduler$compute()
 4.       └─self$compute_step()

Error ('test-lightgbm.R:27:5'): Learner can generate training set predictions
Error in `self$compute_step()`: Error in (function (params = list(), data, nrounds = 100L, valids = list(),  : 
  unused argument (num_threads = 1)

Backtrace:
    ▆
 1. └─learner_obj$train(task) at test-lightgbm.R:27:5
 2.   └─delayed_fit$compute(job_type = sl3_delayed_job_type(), progress = verbose) at sl3/R/Lrnr_base.R:226:7
 3.     └─scheduler$compute()
 4.       └─self$compute_step()

Error ('test-lightgbm.R:37:5'): Chaining returns a task
Error in `self$compute_step()`: Error in (function (params = list(), data, nrounds = 100L, valids = list(),  : 
  unused argument (num_threads = 1)

Backtrace:
    ▆
 1. └─learner_obj$train(task) at test-lightgbm.R:37:5
 2.   └─delayed_fit$compute(job_type = sl3_delayed_job_type(), progress = verbose) at sl3/R/Lrnr_base.R:226:7
 3.     └─scheduler$compute()
 4.       └─self$compute_step()

Error ('test-lightgbm.R:44:5'): Chaining returns the correct number of rows
Error in `self$compute_step()`: Error in (function (params = list(), data, nrounds = 100L, valids = list(),  : 
  unused argument (num_threads = 1)

Backtrace:
    ▆
 1. └─learner_obj$train(task) at test-lightgbm.R:44:5
 2.   └─delayed_fit$compute(job_type = sl3_delayed_job_type(), progress = verbose) at sl3/R/Lrnr_base.R:226:7
 3.     └─scheduler$compute()
 4.       └─self$compute_step()

Error ('test-lightgbm.R:59:3'): Lrnr_lightgbm predictions match lightgbm's: continuous outcome
Error in `self$compute_step()`: Error in (function (params = list(), data, nrounds = 100L, valids = list(),  : 
  unused argument (num_threads = 1)

Backtrace:
    ▆
 1. └─lrnr_lightgbm$train(task) at test-lightgbm.R:59:3
 2.   └─delayed_fit$compute(job_type = sl3_delayed_job_type(), progress = verbose) at sl3/R/Lrnr_base.R:226:7
 3.     └─scheduler$compute()
 4.       └─self$compute_step()

Error ('test-lightgbm.R:89:3'): Lrnr_lightgbm predictions match lightgbm's: binary outcome
Error in `self$compute_step()`: Error in (function (params = list(), data, nrounds = 100L, valids = list(),  : 
  unused arguments (num_threads = 1, num_leaves = 30)

Backtrace:
    ▆
 1. └─lrnr_lightgbm$train(task) at test-lightgbm.R:89:3
 2.   └─delayed_fit$compute(job_type = sl3_delayed_job_type(), progress = verbose) at sl3/R/Lrnr_base.R:226:7
 3.     └─scheduler$compute()
 4.       └─self$compute_step()

Error ('test-lightgbm.R:121:3'): Lrnr_lightgbm predictions match lightgbm's: categorical outcome
Error in `self$compute_step()`: Error in (function (params = list(), data, nrounds = 100L, valids = list(),  : 
  unused arguments (num_threads = 1, num_leaves = 40, num_class = 11)

Backtrace:
    ▆
 1. └─lrnr_lightgbm$train(task) at test-lightgbm.R:121:3
 2.   └─delayed_fit$compute(job_type = sl3_delayed_job_type(), progress = verbose) at sl3/R/Lrnr_base.R:226:7
 3.     └─scheduler$compute()
 4.       └─self$compute_step()

Error ('test-lightgbm.R:157:3'): Cursory test of Lrnr_lightgbm with weights
Error in `self$compute_step()`: Error in (function (params = list(), data, nrounds = 100L, valids = list(),  : 
  unused argument (num_threads = 1)

Backtrace:
    ▆
 1. └─lrnr_lightgbm$train(task) at test-lightgbm.R:157:3
 2.   └─delayed_fit$compute(job_type = sl3_delayed_job_type(), progress = verbose) at sl3/R/Lrnr_base.R:226:7
 3.     └─scheduler$compute()
 4.       └─self$compute_step()

[ FAIL 11 | WARN 7 | SKIP 6 | PASS 182 ]
══ Terminated early ════════════════════════════════════════════════════════════
