% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cv_sl.R
\name{cv_sl}
\alias{cv_sl}
\title{Cross-validated Super Learner}
\usage{
cv_sl(lrnr_sl, task, eval_fun)
}
\arguments{
\item{lrnr_sl}{a \code{\link{Lrnr_sl}} object specifying the Super Learner.
Note that the \code{cv_control} argument of \code{\link{Lrnr_sl}} can be
specified to control the inner cross-validation of \code{lrnr_sl}, as shown
in the example.}

\item{task}{the task used for training and performance assessment.}

\item{eval_fun}{the evaluation function, either a loss or risk function, for
evaluating the Super Learner's predictions.}
}
\value{
A list of containing the following: the table of cross-validated
risk estimates of the super learner and the candidate learners used to
construct it, and either a matrix of coefficients for the super learner
on each fold or a list for the metalearner fit on each fold.
}
\description{
Cross-validated Super Learner
}
\examples{
\dontrun{
data(cpp_imputed)
cpp_task <- sl3_Task$new(
  data = cpp_imputed,
  covariates = c("apgar1", "apgar5", "parity", "gagebrth", "mage"),
  outcome = "haz"
)
glm_lrn <- Lrnr_glm$new()
ranger_lrn <- Lrnr_ranger$new()
lasso_lrn <- Lrnr_glmnet$new()
sl <- Lrnr_sl$new(
  learners = list(glm_lrn, ranger_lrn, lasso_lrn),
  cv_control = list(V = 5),
  verbose = FALSE
)
cv_sl_object <- cv_sl(
  lrnr_sl = sl, task = cpp_task, eval_fun = loss_squared_error
)
}
}
